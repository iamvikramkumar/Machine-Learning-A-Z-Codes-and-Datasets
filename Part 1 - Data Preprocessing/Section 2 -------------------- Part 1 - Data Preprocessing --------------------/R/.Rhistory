plot(x,y,type='l')
plot(x,y,type='c')
plot(x,y,type='o')
plot(x,y,type='h')
plot(x,y,type='n')
plot(x,y,type='l',lwd=6,col="darkgreen")
plot(x,y,type='b',lwd=3,col="darkgreen",pch=5)
plot(x,y,type='l',lwd=6,col="darkgreen",main="Line chart",
xlab="Years",ylab="Experience",col.main="red")
plot(x,y,type='l',lwd=6,col="darkgreen",main="Line chart",
xlab="Years",ylab="Experience",col.main="red",xlim=c(0,20),
ylim=c(0,50),col.lab="green",cex.lab=1.2,
sub="Line chart comparing years and experience",
cex.sub=0.8,col.sub="magenta")
y1=c(10,22,25,24,20,15,36,28,38,40)
lines(x,y1,type="o",pch=8,col="cyan")
par(bg="lightgreen")
x=c(1,2,3,4,5,6,7,8,9,10)
y=c(1,5,8,5,2,7,9,10,2,8)
plot(x,y)
plot(x,y,type='l')
plot(x,y,type='c')
plot(x,y,type='o')
plot(x,y,type='h')
plot(x,y,type='n')
plot(x,y,type='l',lwd=6,col="darkgreen")
plot(x,y,type='b',lwd=3,col="darkgreen",pch=5)
plot(x,y,type='l',lwd=6,col="darkgreen",main="Line chart",
xlab="Years",ylab="Experience",col.main="red")
plot(x,y,type='l',lwd=6,col="darkgreen",main="Line chart",
xlab="Years",ylab="Experience",col.main="red",xlim=c(0,20),
ylim=c(0,50),col.lab="cyan",cex.lab=1.2,
sub="Line chart comparing years and experience",
cex.sub=0.8,col.sub="magenta")
y1=c(10,22,25,24,20,15,36,28,38,40)
lines(x,y1,type="o",pch=8,col="cyan")
par(bg="lightpink")
x=c(1,2,3,4,5,6,7,8,9,10)
y=c(1,5,8,5,2,7,9,10,2,8)
plot(x,y)
plot(x,y,type='l')
plot(x,y,type='c')
plot(x,y,type='o')
plot(x,y,type='h')
plot(x,y,type='n')
plot(x,y,type='l',lwd=6,col="darkgreen")
plot(x,y,type='b',lwd=3,col="darkgreen",pch=5)
plot(x,y,type='l',lwd=6,col="darkgreen",main="Line chart",
xlab="Years",ylab="Experience",col.main="red")
plot(x,y,type='l',lwd=6,col="darkgreen",main="Line chart",
xlab="Years",ylab="Experience",col.main="red",xlim=c(0,20),
ylim=c(0,50),col.lab="cyan",cex.lab=1.2,
sub="Line chart comparing years and experience",
cex.sub=0.8,col.sub="magenta")
y1=c(10,22,25,24,20,15,36,28,38,40)
lines(x,y1,type="o",pch=8,col="cyan")
plot(x,y,type='o',lwd=6,col="darkgreen",main="Line chart",
xlab="Years",ylab="Experience",col.main="red",xlim=c(0,20),
ylim=c(0,50),col.lab="cyan",cex.lab=1.2,
sub="Line chart comparing years and experience",
cex.sub=0.8,col.sub="magenta",pch=22)
plot(x,y,type='o',col="darkgreen",main="Line chart",
xlab="Years",ylab="Experience",col.main="red",xlim=c(0,20),
ylim=c(0,50),col.lab="cyan",cex.lab=1.2,
sub="Line chart comparing years and experience",
cex.sub=0.8,col.sub="magenta",pch=22)
lines(x,y1,type="o",pch=8,col="cyan")
legend("topright",legend=c("Line1","Line2",col=c("darkgreen","cyan"),pch=c(22,8)))
legend("topright",
legend=c("Line1","Line2"),col=c("darkgreen","cyan"),
pch=c(22,8),cex=0.25)
plot(x,y,type='o',col="darkgreen",main="Line chart",
xlab="Years",ylab="Experience",col.main="red",xlim=c(0,20),
ylim=c(0,50),col.lab="cyan",cex.lab=1.2,
sub="Line chart comparing years and experience",
cex.sub=0.8,col.sub="magenta",pch=22)
lines(x,y1,type="o",pch=8,col="cyan")
legend("topright",
legend=c("Line1","Line2"),col=c("darkgreen","cyan"),
pch=c(22,8),cex=0.25)
plot(x,y,type='o',col="darkgreen",main="Line chart",
xlab="Years",ylab="Experience",col.main="red",xlim=c(0,20),
ylim=c(0,50),col.lab="cyan",cex.lab=1.2,
sub="Line chart comparing years and experience",
cex.sub=0.8,col.sub="magenta",pch=22)
lines(x,y1,type="o",pch=8,col="cyan")
legend("topright",
legend=c("Line1","Line2"),col=c("darkgreen","cyan"),
pch=c(22,8),cex=0.5)
d1=read.csv(file.choose())
View(d1)
plot(d1$Pregnancies,d1$Age,type="l",col="red")
lines(d1$Glucose,d1$Insulin,type="l",col="green")
lines(d1$Pregnancies,d1$Insulin,type="l",col="green")
car1=read.delim(file.choose())
View(car1)
car1=read.delim(file.choose(),header=FALSE)
View(car1)
ggplot(diamonds,aes(x=carat,y=price))+
geom_point()
library(ggplot2)
ggplot(diamonds,aes(x=carat,y=price))+
geom_point()
ggplot(diamonds,aes(x=carat,y=price,col="red"))+
geom_point()
ggplot(diamonds,aes(x=carat,y=price,fill=cut))+
geom_point()
ggplot(diamonds,aes(x=carat,y=price,col=cut))+
geom_point()
house <- read.csv(file.choose())
View(house)
library(ggplot2)
ggplot(house, aes(house$age, house$price)) + geom_point()
house <- house[,-1]
for (i in 1:9) {
if(class(house[,i]) == "numeric" | class(house[,i]) == "integer") {
ggplot(house, aes(house[,i],house$price)) + geom_point()
}
}
library(ggplot2)
#ggplot(house, aes(house$age, house$price)) + geom_point()
house <- house[,-1]
for (i in 1:9) {
if(class(house[,i]) == "numeric" | class(house[,i]) == "integer") {
ggplot(house, aes(house[,i],house$price)) + geom_point()
}
}
x <- ggplot(house, aes(house[,i],house$price)) + geom_point()
print(x)
# read file
a=read.csv(file.choose(),header=TRUE)
str(a)
summary(a)
View(a)
# build corpus: collection of doc
# each tweet will be consider as documents
library(tm)
corpus<-iconv(a$text)
corpus
corpus<- Corpus(VectorSource(corpus))
inspect(corpus[1:5])
corpus<- tm_map(corpus,tolower)
inspect(corpus[1:5])
corpus<-tm_map(corpus,removePunctuation)# remove puntuations like , .
inspect(corpus[1:5])
corpus<- tm_map(corpus,removeNumbers)
inspect(corpus[1:5])
cleanset<-tm_map(corpus,removeWords,stopwords('english'))# remove common words
inspect(cleanset[1:5])
removeURL<- function(x)gsub('Â¦','',x)
cleanset<-tm_map(cleanset,content_transformer(removeURL))
inspect(cleanset[1:5])
cleanset<-tm_map(cleanset , removeWords,c('anyone','walker16'))#remove speific words
cleanset<-tm_map(cleanset,gsub,pattern='debates',replacement='debate')
cleanset<-tm_map(cleanset,stripWhitespace)
inspect(cleanset[1:5])
# read file
#twitter dataset
a=read.csv(file.choose(),header=TRUE)
str(a)
summary(a)
View(a)
table(a$sentiment)
# build corpus: collection of doc
# each tweet will be consider as documents
library(tm)
corpus<-iconv(a$text)
corpus<- Corpus(VectorSource(corpus))
inspect(corpus[1:5])
tm_map
corpus<- tm_map(corpus,tolower)
inspect(corpus[1:5])
corpus<-tm_map(corpus,removePunctuation)# remove puntuations like , .
inspect(corpus[1:5])
corpus<- tm_map(corpus,removeNumbers)
inspect(corpus[1:5])
d1=data.frame
(Name=c('Veer','Jai','Ajay','Vijay'),
Age=c(13,15,18,20),
Section=c('KM023','KM024','KM045','KM009'),
CGPA=c(8.9,7.5,8,9))
d1=data.frame(Name=c('Veer','Jai','Ajay','Vijay'),
Age=c(13,15,18,20),
Section=c('KM023','KM024','KM045','KM009'),
CGPA=c(8.9,7.5,8,9))
d1
{
Name=c()
Age=c()
Section=c()
CGPA=c()
n=as.integer(readline('Enter no. of students:'))
for(i in 1:n)
{
Name[i]=readline()
Age[i]=as.integer(readline())
Section[i]=readline()
CGPA[i]=as.numeric(readline())
}
d2=data.frame(Name,Age,Section,CGPA)
d2
}
d3=data.frame()
d3=edit(d3)
d3
save(d1,d2,d3,file="Veer.RData")
load("Veer.RData")
load("Veer.RData")
load("Veer.RData")
d1
d2
d3
getwd()
load("~/Veer.RData")
{a=readline("Enter a character")
b=as.numeric(readline("Enter a numeric:"))
c=as.logical(readline("Enter a logical value"))
d=as.complex(readline("Enter a complex number"))
e=as.integer(readline("Enter an integer"))
a
b
c
d
e}
{a=readline("Enter a character")
b=as.numeric(readline("Enter a numeric:"))
c=as.logical(readline("Enter a logical value"))
d=as.complex(readline("Enter a complex number"))
e=as.integer(readline("Enter an integer"))
a
b
c
d
e}
a
b
c
d
e}
e
{
Name=c()
Age=c()
Gender=c()
CGPA=c()
for(i in 1:3)
{
Name[i]=readline()
Age[i]=as.numeric(readline())
Gender[i]=readline()
CGPA[i]=as.numeric(readline())
}
list1=list(Name,Age,Gender,CGPA)
list1
}
{
Name=c()
Age=c()
Gender=c()
CGPA=c()
for(i in 1:2)
{
Name[i]=readline()
Age[i]=as.numeric(readline())
Gender[i]=as.factor(readline())
CGPA[i]=as.numeric(readline())
}
list1=list(Name,Age,Gender,CGPA)
list1
}
bloodgroup=factor(c('A+','AB+','O-','B+','A+','B+','O+'),
levels=c('A+','B+','O+'),labels = c(1,2,3))
bloodgroup
{
Name=c()
Age=c()
Gender=c()
CGPA=c()
for(i in 1:2)
{
Name[i]=readline()
Age[i]=as.numeric(readline())
Gender[i]=readline()
CGPA[i]=as.numeric(readline())
}
}
fun1<-function()
{
list1=list(Name,Age,Gender,CGPA)
list1
}
fun1(Name,Age,Gender,CGPA)
fun1<-function(Name,Age,Gender,CGPA)
{
list1=list(Name,Age,Gender,CGPA)
list1
}
fun1(Name,Age,Gender,CGPA)
fun1<-function(Name,Age,Gender,CGPA)
{
list1=list(Name,Age,Gender,CGPA)
list1
}
#Matrix
m1=matrix(c(12,15,20,26,56,758,56,6,7,43,3,442,4,454,54,46),
nrow=3)
m1
#Matrix
m1=matrix(c(12,15,20,26,56,758,56,6,7,43,3,442,4,454,54,46),
nrow=3,byrow=TRUE)
m1
getwd()
{
n=as.integer(readline('Enter no. of students'))
roll=c()
name=c()
age=c()
gender=c()
for(i in 1:n)
{
roll[i]=as.integer(readline('Roll no.'))
name[i]=readline('Name')
age[i]=as.integer(readline('Age'))
gender[i]=readline('Gender')
}
d1=data.frame("Roll no."=roll,"Name"=name,
"Age"=age,"Gender"=gender)
d1
write.csv(d1,file="File1.csv")
}
d1=data.frame(Name=c('Veer','Jai','Ajay','Vijay'),
Age=c(13,15,18,20),
Section=c('KM023','KM024','KM045','KM009'),
CGPA=c(8.9,7.5,8,9))
d1
{
Name=c()
Age=c()
Section=c()
CGPA=c()
n=as.integer(readline('Enter no. of students:'))
for(i in 1:n)
{
Name[i]=readline()
Age[i]=as.integer(readline())
Section[i]=readline()
CGPA[i]=as.numeric(readline())
}
d2=data.frame(Name,Age,Section,CGPA)
d2
}
d3=data.frame()
d3=edit(d3)
d3
save(d1,d2,d3,file="File2.RData")
load("File2.RData")
d1
d2
d3
ls()
a=readline("Enter a character")
{
a=readline("Enter a character")
b=as.numeric(readline("Enter a number"))
c=as.logical(readline("Enter a logical value"))
d=as.complex(readline("Enter an integer"))
e=as.integer(readline("Enter an integer value"))
}
fun2=function(Name,Age)
{
list1=list(Name,Age)
list1
}
{
n=as.integer(readline("Enter no. of students"))
Name=c()
Age=c()
for (i in 1:n)
{
Name[i]=readline()
Age[i]=as.integer(readline())
}
fun2(Name,Age)
}
m1=matrix(c(12,15,20,26,56,758,56,6,7,43,3,442,4,454,54,46),
nrow=3,byrow=TRUE)
m1
bloodgroup=factor(c('A+','AB+','O-','B+','A+','B+','O+'),
levels=c('A+','B+','O+'),labels = c(1,2,3))
bloodgroup
list1
save(list1,mat2,file="File3.RData")
load("File3.RData")
fun2=function(Name,Age)
{
list1=list(Name,Age)
list1
}
{
n=as.integer(readline("Enter no. of students"))
Name=c()
Age=c()
for (i in 1:n)
{
Name[i]=readline()
Age[i]=as.integer(readline())
}
fun2(Name,Age)
}
h
serh
{
n=as.integer(readline("Enter no. of students"))
Name=c()
Age=c()
for (i in 1:n)
{
Name[i]=readline()
Age[i]=as.integer(readline())
}
fun2(Name,Age)
}
m1=matrix(c(12,15,20,26,56,758,56,6,7,43,3,442,4,454,54,46),
nrow=3,byrow=TRUE)
m1
save(list1,mat2,file="File3.RData")
list1
fun2(Name,Age)
list1
fun2=function(Name,Age)
{
list1=list(Name,Age)
list1
}
{
n=as.integer(readline("Enter no. of students"))
Name=c()
Age=c()
for (i in 1:n)
{
Name[i]=readline()
Age[i]=as.integer(readline())
}
fun2(Name,Age)
}
{
n=as.integer(readline("Enter no. of students"))
Name=c()
Age=c()
for (i in 1:n)
{
Name[i]=readline()
Age[i]=as.integer(readline())
}
list1=list(Name,Age)
list1
}
save(list1,m1,file="File4.RData")
list1
load("File4.RData")
list1
m1
ls()
{
Name=c()
Age=c()
Section=c()
CGPA=c()
n=as.integer(readline('Enter no. of students:'))
for(i in 1:n)
{
Name[i]=readline()
Age[i]=as.integer(readline())
Section[i]=readline()
CGPA[i]=as.numeric(readline())
}
d2=data.frame(Name,Age,Section,CGPA)
d2
}
write.csv(d2,file = "Dataframe1.csv")
getwd()
getwd()
setwd("C:/1_Study material/Machine Learning using R/Machine Learning A-Z (Codes and Datasets)/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/R")
d1=read.csv("Data.csv")
View(d1)
str(d1)
summary(d1)
colnames(d1)
colnames(d1)=c("Country","Age","Salary","Tax paid")
colnames(d1)
table(d1$Country)
d1$Country=factor(d1$Country,
levels=c("France","Germany","Spain"),
labels=c(0,1,2))
d1=d1[,-1]
is.na(d1)
sum(is.na(d1))
which(is.na(d1))
complete.cases(d1)
miss=d1[!complete.cases(d1),]
miss
d1$Age=ifelse(is.na(d1$Age),
mean(d1$Age,na.rm=TRUE),
d1$Age)
sum(is.na(d1))
miss=d1[!complete.cases(d1),]
miss
d1$Salary=ifelse(is.na(d1$Salary),
mean(d1$Salary,na.rm=TRUE),
d1$Salary)
miss=d1[!complete.cases(d1),]
miss
