subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
temperature
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
temperature[2]
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
subject_name[1]
temperature[2]
flu_status[1]
temperature[2:3]
temperature[0:3]
temperature[1:3]
temperature[ :3]
temperature[2:3]
gender <- factor(c("MALE", "FEMALE", "MALE"))
gender <- factor(c("MALE", "FEMALE", "MALE"))
gender
gender <- factor(c("MALE", "FEMALE", "MALE", "FEMALE", "MALE"))
gender
blood <- factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
blood <- factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
blood
blood = factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
blood
subject1 <- list(fullname = subject_name[1],
temperature = temperature[1],
flu_status = flu_status[1],
gender = gender[1],
blood = blood[1])
subject1
subject1$temperature
pt_data <- data.frame(subject_name, temperature, flu_status,
gender, blood, stringsAsFactors = FALSE)
pt_data
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
subject_name[1]
temperature[2]
flu_status[1]
temperature[2:3]
gender <- factor(c("MALE", "FEMALE", "MALE", "FEMALE", "MALE"))
gender
blood = factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
blood
subject1 <- list(fullname = subject_name[1],
temperature = temperature[1],
flu_status = flu_status[1],
gender = gender[1],
blood = blood[1])
subject1
subject1$temperature
pt_data <- data.frame(subject_name, temperature, flu_status,
gender, blood, stringsAsFactors = FALSE)
pt_data
pt_data <- data.frame(subject_name, temperature, flu_status,
gender, blood, stringsAsFactors = FALSE)
str(pt_data)
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
subject_name[1]
temperature[2]
flu_status[1]
temperature[2:3]
gender <- factor(c("MALE", "FEMALE", "MALE", "FEMALE", "MALE"))
gender
blood = factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
blood
subject1 <- list(fullname = subject_name[1],
temperature = temperature[1],
flu_status = flu_status[1],
gender = gender[1],
blood = blood[1])
subject1
subject1$temperature
data <- data.frame(subject_name, temperature, flu_status,
gender, blood, stringsAsFactors = FALSE)
data
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
subject_name[1]
temperature[2]
flu_status[1]
temperature[2:3]
gender <- factor(c("MALE", "FEMALE", "MALE", "FEMALE", "MALE"))
gender
blood = factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
blood
subject1 <- list(fullname = subject_name[1],
temperature = temperature[1],
flu_status = flu_status[1],
gender = gender[1],
blood = blood[1])
subject1
subject1$temperature
data1 <- data.frame(subject_name, temperature, flu_status,
gender, blood, stringsAsFactors = FALSE)
data1
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
subject_name[1]
temperature[2]
flu_status[1]
temperature[2:3]
gender <- factor(c("MALE", "FEMALE", "MALE", "FEMALE", "MALE"))
gender
blood = factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
blood
data1 <- data.frame(subject_name, temperature, flu_status,
gender, blood, stringsAsFactors = FALSE)
data1
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
gender <- factor(c("MALE", "FEMALE", "MALE", "FEMALE", "MALE"))
blood = factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
data1 <- data.frame(subject_name, temperature, flu_status,
gender, blood, stringsAsFactors = FALSE)
data1
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
gender <- factor(c("MALE", "FEMALE", "MALE"))
blood = factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
data1 <- data.frame(subject_name, temperature, flu_status,
gender, blood, stringsAsFactors = FALSE)
data1
pt_data[, 1]
data1[, 1]
data1[1,]
data1[,]
m <- matrix(c('a', 'b', 'c', 'd'), nrow = 2)
m
data = read.csv(file.choose())
summary(data)
data$Outcome=factor(data$Outcome, levels=c(0,1))
split= sample.split(data$Outcome,SplitRatio=0.85)
training_set=subset(data,split==TRUE)
test_set=subset(data,split==FALSE)
colnames(training_set)
library(caTools)
data$Outcome=factor(data$Outcome, levels=c(0,1))
split= sample.split(data$Outcome,SplitRatio=0.85)
training_set=subset(data,split==TRUE)
test_set=subset(data,split==FALSE)
colnames(training_set)
training_set[-9]=scale(training_set[-9])
test_set[-9]=scale(test_set[-9])
head(training_set[-9],4)
library(rpart)
fit_model = rpart(Outcome~., training_set)
y_pred=predict(fit_model,test_set[-9],type='class')
cm=table(test_set[,9],y_pred)
cm
library(caret)
confusionMatrix(cm)
library(class)
y_pred = knn(train = training_set[,-9],test = test_set[,-9],
cl=training_set[,9],k=5)
cm = table(test_set[,9],y_pred)
cm
confusionMatrix(cm)
library(e1071)
fit_naive=naiveBayes(x=training_set[-9],
y=training_set$Outcome)
y_pred=predict(fit_naive,newdata=test_set[-9])
#6. Calculating confusion matrix
cm=table(test_set[,9],y_pred)
cm
confusionMatrix(cm)
setwd("~/R/Machine Learning A-Z (Codes and Datasets)/Part 3 - Classification")
library(MASS)
#boston dataset is present in MASS package
library(neuralnet)
Data<-Boston
help("Boston")
View(Data)
str(Data)
dim(Data)
hist(Data$medv)
apply(Data,2,range)
summary(Data)
maxValue=apply(Data,2,max)
maxValue
minValue=apply(Data,2,min)
minValue
Data=as.data.frame(scale(Data,center=minValue,
scale=maxValue-minValue))
x=sample(1:nrow(Data),400)
x
train=Data[x,]#400
test=Data[-x,]#106
neauralmodel=neuralnet(medv ~ .,hidden = c(4,2),
data=train)
plot(neauralmodel)
model_results=compute(neuralmodel,test[1:13])
neuralmodel=neuralnet(medv ~ .,hidden = c(4,2),
data=train)
plot(neuralmodel)
model_results=compute(neuralmodel,test[1:13])
str(model_results)
predicted<-model_results$net.result
cor(predicted,test$medv)
